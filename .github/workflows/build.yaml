# https://lgug2z.com/articles/building-and-privately-caching-x86-and-aarch64-nixos-systems-on-github-actions/
name: "build"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  models: read

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - run: |
          sudo mkdir -p /etc/nix
          echo "machine cache.lorenzbischof.com password ${{ secrets.ATTIC_TOKEN }}" | sudo tee /etc/nix/netrc > /dev/null

      - uses: wimpysworld/nothing-but-nix@main
        with:
          hatchet-protocol: holster

      - uses: cachix/install-nix-action@v31
        with:
          # We set our custom GitHub token for any private flake inputs we might have
          github_access_token: ${{ secrets.GH_TOKEN }}
          # We add all the config for extra platforms, other binary caches and to raise the number of connections that can be made
          extra_nix_config: |
            fallback = true
            http-connections = 128
            max-substitution-jobs = 128
            extra-platforms = aarch64-linux
            substituters = https://cache.lorenzbischof.com/system?priority=42 https://nix-community.cachix.org?priority=41 https://cache.nixos.org/
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= system:DAJL6xmsmoUmZOeGL8XxrEWF5pdtFGMW2+cOGyYaqgU= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=

      # https://determinate.systems/posts/magic-nix-cache-free-tier-eol/
      #- uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:cicd
          use-cache: 'true'

      - name: Build and push system
        run: |
          nix run nixpkgs#attic-client -- login cache https://cache.lorenzbischof.com ${{ secrets.ATTIC_TOKEN }}
          nix run nixpkgs#nix-fast-build -- --no-nom --skip-cached --system "aarch64-linux x86_64-linux" --attic-cache system

     # - name: Process failure
     #   if: failure()
     #   run: |
     #     gh extension install github/gh-models
     #     cat build.log | sed -n '/error:/,$p' | tail | gh models run openai/gpt-4o "This is the result of a nixosConfiguration nix-build. Summarize the error and suggest a possible fix, if you are pretty certain it might help" 
     #   env:
     #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
