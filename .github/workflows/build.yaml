# https://lgug2z.com/articles/building-and-privately-caching-x86-and-aarch64-nixos-systems-on-github-actions/
name: "build"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: read
  models: read
concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [flake-check, laptop, nas, vps]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - run: |
          sudo mkdir -p /etc/nix
          echo "machine cache.lorenzbischof.com password ${{ secrets.ATTIC_TOKEN }}" | sudo tee /etc/nix/netrc > /dev/null
      - uses: wimpysworld/nothing-but-nix@main
        with:
          hatchet-protocol: holster
      - uses: cachix/install-nix-action@v31
        with:
          # We set our custom GitHub token for any private flake inputs we might have
          github_access_token: ${{ secrets.GH_TOKEN }}
          extra_nix_config: |
            fallback = true
            http-connections = 128
            max-substitution-jobs = 128
            extra-platforms = aarch64-linux
            substituters = https://cache.lorenzbischof.com/system?priority=42 https://cache.nixos.org/
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= system:DAJL6xmsmoUmZOeGL8XxrEWF5pdtFGMW2+cOGyYaqgU=
      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:cicd
          use-cache: 'true'
      - name: Build and push
        run: |
          nix run nixpkgs#attic-client login cache https://cache.lorenzbischof.com ${{ secrets.ATTIC_TOKEN }}
          if [ "${{ matrix.target }}" = "flake-check" ]; then
            nix flake check
          else
            nix build .#nixosConfigurations.${{ matrix.target }}.config.system.build.toplevel
            nix run nixpkgs#attic-client push system result
          fi
    
  failure-alert:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ cancelled() || contains(needs.*.result, 'cancelled') || contains(needs.*.result, 'failure') }}
    steps:
      - name: Conditionally Fail Required Check
        shell: bash
        run: |
          echo "::error Some required job has failed!"
          exit 1
